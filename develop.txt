""" 09/30  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

python에서의 global 변수
def로 둔 함수안에서 전역을 사용할때마다 계속 해줘야하는 건지?
함수 밖에서 global 변수 선언 가능한지?
 -> 가능은 함. but 함수에서 해당 변수 사용 때 한번 더 global a와 같이 선언 해주어야 사용 가능..
 -> so 함수 사용때마다 명시해주는 것으로

y = -x(x-a) 이용, 점프 구현
좌우 이동에도 적용하면?
 -> 관성 적용 가능.

더블 점프 구현?
 -> y = y - JumpHeight
     와 같이, y원점을 계속 바꿔주기
     Jump 마지막 조건문에 y - JumpHeight <= 100 추가
     이렇게 하면 원점에 도착 시 점프 멈추기 가능.

     JumpTime > JumpPower
      이 구문은 점프 뛴 만큼 돌아오기만 하면 만족됨.. 
      부적합 한것처럼 보이지만, 처음 점프 뛰는걸 구현하려면 필요함




""" 10/4   ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

할로우 나이트 맵을 하나하나 캡쳐해서 통맵을 만드는 사이트 발견
다운로드는 열리지 않음
통맵 확대해서 볼 수 있는 INTERACTIVE MAP 존재,
원하는 부분만 캡쳐해서 사용해야 할듯

이미지 이어붙이기 = 포토샵 이용
 # https://brunch.co.kr/@mrlees/11

 



""" 10/7   ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

캔버스 크기 -> 1280 x 720

맵 툴 필요
 -> 키보드or마우스 조작, 선택된 grid에 rectangle 그려주기.
 -> txt 파일에 저장
 
file = open("TextFile.txt", "r")
    # 파일 열기. 뒤의 인자는 C와 동일한듯
strings = file.readlines() 
    # 모든 문자열 return, list 형태, 개행 문자 포함
print(strings)
file.close()

//
file = open("grid_data.txt", "r")
before_strings = file.readlines()
print(before_strings)
file.close()
grid_data = []

for i in before_strings:
    tmp_str = i.replace('\n', '')
    grid_data.append(tmp_str)

// 다음과 같이 개행 문자 삭제 가능

txt 파일 필요한 데이터
xpos, ypos, (grid 크기는 추후에), type (= empty, passible ground, impassible ground, impassible ground(can climb wall), trap, water)




""" 10/12  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

box2d를 공부하고.. 그려보려 했으나
pygame의 polygon 기능, 점 4개 전부를 써서 사각형 그리는 기능이 없음
과감하게 버리기로..


// numpy 라이브러리 사용시, 구조체 배열이나 그리드 배열 손쉽게 만들기 가능.
import numpy as np
x_grid = np.linspace(1,10,10)
X = np.meshgrid(x_grid)
 --> 다음과 같이 grid 만들기 가능.
X[0][1] <- 접근 가능
// 


// from dataclasses import dataclass // 구조체 모듈

class BLOCK:
    x: int
    y: int
    type: int

blocks = []
blocks.append(BLOCK())
blocks.append(BLOCK())

blocks[0].x = 1
blocks[0].y = 1
blocks[0].type = 1

print(blocks[0].x, blocks[1].y)

//

""" 10/13  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

공간분할 알고리즘 -> 섹터 사용
굳이 쿼드트리 사용할 필요는 없을듯

스테이지 총 3개
3개 섹터(변경 가능)로 나눠서 충돌 체크

지나갈 수 있는 블럭은 만들지x

ex_map.clip_draw(int(x - MoveDistance) // 5, int(y - JumpHeight) // 5, 640, 360, 640, 360, 1280, 720)
white_rect.draw(int(block_x - MoveDistance) // 2.5, 360)
    ##  map_x : block_x = 2 : 1
    ##  map_y : block_y = 2 : 1

""" 10/14 ~ 15  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// """

기본적인 BLOCK <---> PLAYER 간 물리 구현 완료
해결해야할 과제
    1. BLOCK의 아래쪽에 점프하다 부딪혔을 때. JumpTime을 그대로 돌려줘서 내려가게 만듬.
       하지만 내려오는 힘이 너무 강함. 멈추게 하거나 JumpPower를 조금 조정해야 할듯.
    2. 벽타기. 벽타기 조건을 만들고, 벽타기 상태에서 할 수 있는 것들을 구현
    3. 수영... 은 추후에

한 번씩 점프하다 내려올 때, collision되는 경우가 있음.
이때 Move가 안되기 때문에, 좌표값 다시 조정 해줘야 할 듯. (충돌 시 좌표값 충돌하지 않을 때까지 Up)

더블 점프시 일시적으로 1프레임동안 블럭 값이 이상해지는 경우가 생김
  -> JumpHeight를 식에 맞춰 최신화를 계속 시켜주어야 함.
     JumpTime을 건드릴 때 유의해야 할듯.